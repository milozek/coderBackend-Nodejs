openapi: 3.0.0
info:
  title: Your API
  version: 1.0.0
paths:

  /api/getProduct/{pdi}:
    get:
      summary: Obtener un producto por su identificador.
      tags:
      - Products
      parameters:
      - in: path
        name: pdi
        required: true
        description: Identificador del producto a buscar.
        schema:
          type: string
      responses:
        '200':
          description: Producto obtenido correctamente desde la base de datos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado de la respuesta
                    example: success
                  payload:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado.
        '500':
          description: Error interno del servidor.

  /api/product:
    post:
      summary: Crear un nuevo producto.
      description: Endpoint para crear un nuevo producto.
      tags:
      - Products
      security:
      - bearerAuth: []
      requestBody:
        description: Datos del producto a crear
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                thumbnail:
                  type: string
                size:
                  type: string
                price:
                  type: number
                code:
                  type: number
                stock:
                  type: number
              example:
                title: "Product Title"
                description: "Product Description"
                thumbnail: "image-url.jpg"
                size: "Large"
                price: 29.99
                code: 12345
                stock: 100
                email: "pedrorosales@hotmail.com"
                role: "user"
      responses:
        '201':
          description: Producto creado exitosamente.
          content:
            application/json:
              example:
                id: 1
                title: "Product Title"
                description: "Product Description"
                thumbnail: "image-url.jpg"
                size: "Large"
                price: 29.99
                code: 12345
                stock: 100
        '400':
          description: Solicitud incorrecta - Datos no válidos proporcionados.
          content:
            application/json:
              example:
                error: "Bad Request"
                message: "Invalid data provided"
                details: "Validation error details"
        '500':
          description: Error interno del servidor.
          content:
            application/json:
              example:
                error: "Internal Server Error"
                message: "An unexpected error occurred"


  /api/deleteProduct/{pdi}/{uid}:
    delete:
      summary: Eliminar un producto por su identificador.
      tags:
      - Products
      parameters:
      - in: path
        name: pdi
        required: true
        description: Identificador del producto a buscar.
        schema:
          type: string
      - in: path
        name: uid
        required: true
        description: Identificador del usuario.
        schema:
          type: string
      responses:
        '200':
          description: Producto obtenido correctamente desde la base de datos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado de la respuesta
                    example: success
                  payload:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado.
        '500':
          description: Error interno del servidor.

  /api/cartsview/{uid}:
    get:
      summary: Obtener un carrito por su identificador.
      tags:
      - Carts
      parameters:
      - in: path
        name: uid
        required: true
        description: Identificador del carrito a buscar.
        schema:
          type: string
      responses:
        '200':
          description: Carrito obtenido correctamente desde la base de datos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado de la respuesta
                    example: success
                  payload:
                    $ref: '#/components/schemas/Carts'
        '404':
          description: Producto no encontrado.
        '500':
          description: Error interno del servidor.




  /api/add-to-cart/{productId}:
    post:
      summary: Crear un nuevo producto en el carrito.
      description: Endpoint para agregar un nuevo producto al carrito.
      tags:
      - Carts
      parameters:
      - in: path
        name: productId
        required: true
        description: Identificador del producto a agregar al carrito.
        schema:
          type: string
      security:
      - bearerAuth: []
      requestBody:
        description: Datos del producto a agregar al carrito.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                userId:
                  type: string
              example:
                productId: "product_id"
                userId: "user_id"
      responses:
        '201':
          description: Producto añadido exitosamente al carrito.
          content:
            application/json:
              example:
                message: "Producto añadido exitosamente al carrito."
        '400':
          description: Solicitud incorrecta - Datos no válidos proporcionados.
          content:
            application/json:
              example:
                error: "Solicitud incorrecta"
                message: "Datos no válidos proporcionados."
        '500':
          description: Error interno del servidor.
          content:
            application/json:
              example:
                error: "Error interno del servidor"
                message: "Se produjo un error inesperado."






components:
  schemas:
    Product:
      properties:
        title:
          type: string
        description:
          type: string
        thumbnail:
          type: string
        size:
          type: string
        price:
          type: number
        code:
          type: number
        stock:
          type: number
    Carts:
      properties:
        user:
          type: string
        products:
          type: array


